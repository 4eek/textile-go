// Code generated by protoc-gen-go. DO NOT EDIT.
// source: thread_block.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ThreadBlock_Type int32

const (
	ThreadBlock_INVITE  ThreadBlock_Type = 0
	ThreadBlock_PHOTO   ThreadBlock_Type = 1
	ThreadBlock_COMMENT ThreadBlock_Type = 2
	ThreadBlock_LIKE    ThreadBlock_Type = 3
)

var ThreadBlock_Type_name = map[int32]string{
	0: "INVITE",
	1: "PHOTO",
	2: "COMMENT",
	3: "LIKE",
}
var ThreadBlock_Type_value = map[string]int32{
	"INVITE":  0,
	"PHOTO":   1,
	"COMMENT": 2,
	"LIKE":    3,
}

func (x ThreadBlock_Type) String() string {
	return proto.EnumName(ThreadBlock_Type_name, int32(x))
}
func (ThreadBlock_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_thread_block_91a9544b80e884ea, []int{0, 0}
}

type ThreadBlock struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Target               string               `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Parents              []string             `protobuf:"bytes,3,rep,name=parents,proto3" json:"parents,omitempty"`
	TargetKey            []byte               `protobuf:"bytes,4,opt,name=targetKey,proto3" json:"targetKey,omitempty"`
	ThreadPubKey         string               `protobuf:"bytes,5,opt,name=threadPubKey,proto3" json:"threadPubKey,omitempty"`
	Type                 ThreadBlock_Type     `protobuf:"varint,6,opt,name=type,proto3,enum=ThreadBlock_Type" json:"type,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ThreadBlock) Reset()         { *m = ThreadBlock{} }
func (m *ThreadBlock) String() string { return proto.CompactTextString(m) }
func (*ThreadBlock) ProtoMessage()    {}
func (*ThreadBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_block_91a9544b80e884ea, []int{0}
}
func (m *ThreadBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThreadBlock.Unmarshal(m, b)
}
func (m *ThreadBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThreadBlock.Marshal(b, m, deterministic)
}
func (dst *ThreadBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThreadBlock.Merge(dst, src)
}
func (m *ThreadBlock) XXX_Size() int {
	return xxx_messageInfo_ThreadBlock.Size(m)
}
func (m *ThreadBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ThreadBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ThreadBlock proto.InternalMessageInfo

func (m *ThreadBlock) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ThreadBlock) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *ThreadBlock) GetParents() []string {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *ThreadBlock) GetTargetKey() []byte {
	if m != nil {
		return m.TargetKey
	}
	return nil
}

func (m *ThreadBlock) GetThreadPubKey() string {
	if m != nil {
		return m.ThreadPubKey
	}
	return ""
}

func (m *ThreadBlock) GetType() ThreadBlock_Type {
	if m != nil {
		return m.Type
	}
	return ThreadBlock_INVITE
}

func (m *ThreadBlock) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type SignedThreadBlock struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ThreadId             string   `protobuf:"bytes,4,opt,name=threadId,proto3" json:"threadId,omitempty"`
	ThreadName           string   `protobuf:"bytes,5,opt,name=threadName,proto3" json:"threadName,omitempty"`
	IssuerPubKey         []byte   `protobuf:"bytes,6,opt,name=issuerPubKey,proto3" json:"issuerPubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedThreadBlock) Reset()         { *m = SignedThreadBlock{} }
func (m *SignedThreadBlock) String() string { return proto.CompactTextString(m) }
func (*SignedThreadBlock) ProtoMessage()    {}
func (*SignedThreadBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_thread_block_91a9544b80e884ea, []int{1}
}
func (m *SignedThreadBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedThreadBlock.Unmarshal(m, b)
}
func (m *SignedThreadBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedThreadBlock.Marshal(b, m, deterministic)
}
func (dst *SignedThreadBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedThreadBlock.Merge(dst, src)
}
func (m *SignedThreadBlock) XXX_Size() int {
	return xxx_messageInfo_SignedThreadBlock.Size(m)
}
func (m *SignedThreadBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedThreadBlock.DiscardUnknown(m)
}

var xxx_messageInfo_SignedThreadBlock proto.InternalMessageInfo

func (m *SignedThreadBlock) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SignedThreadBlock) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SignedThreadBlock) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *SignedThreadBlock) GetThreadId() string {
	if m != nil {
		return m.ThreadId
	}
	return ""
}

func (m *SignedThreadBlock) GetThreadName() string {
	if m != nil {
		return m.ThreadName
	}
	return ""
}

func (m *SignedThreadBlock) GetIssuerPubKey() []byte {
	if m != nil {
		return m.IssuerPubKey
	}
	return nil
}

func init() {
	proto.RegisterType((*ThreadBlock)(nil), "ThreadBlock")
	proto.RegisterType((*SignedThreadBlock)(nil), "SignedThreadBlock")
	proto.RegisterEnum("ThreadBlock_Type", ThreadBlock_Type_name, ThreadBlock_Type_value)
}

func init() { proto.RegisterFile("thread_block.proto", fileDescriptor_thread_block_91a9544b80e884ea) }

var fileDescriptor_thread_block_91a9544b80e884ea = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcd, 0x4e, 0xc2, 0x40,
	0x14, 0x85, 0xed, 0x0f, 0x85, 0x5e, 0x08, 0x29, 0x77, 0x61, 0x26, 0xc4, 0x68, 0xd3, 0xc4, 0xa4,
	0xab, 0x21, 0x41, 0x9f, 0x00, 0x43, 0x62, 0x83, 0xfc, 0xa4, 0x36, 0x2e, 0xdc, 0x98, 0xa9, 0x1d,
	0x6b, 0x23, 0xd0, 0xa6, 0x9d, 0x2e, 0x78, 0x19, 0xdf, 0xc2, 0xf7, 0x33, 0x9d, 0x01, 0x84, 0x8d,
	0xbb, 0x9e, 0xd3, 0x73, 0xef, 0xdc, 0xf3, 0x01, 0x8a, 0xcf, 0x92, 0xb3, 0xe4, 0x2d, 0x5e, 0xe7,
	0xef, 0x5f, 0xb4, 0x28, 0x73, 0x91, 0x0f, 0x6f, 0xd2, 0x3c, 0x4f, 0xd7, 0x7c, 0x24, 0x55, 0x5c,
	0x7f, 0x8c, 0x44, 0xb6, 0xe1, 0x95, 0x60, 0x9b, 0x42, 0x05, 0xbc, 0x6f, 0x1d, 0xba, 0x91, 0x9c,
	0x9b, 0x34, 0x63, 0xd8, 0x07, 0x3d, 0x4b, 0x88, 0xe6, 0x6a, 0xbe, 0x1d, 0xea, 0x59, 0x82, 0x97,
	0x60, 0x09, 0x56, 0xa6, 0x5c, 0x10, 0x5d, 0x7a, 0x7b, 0x85, 0x04, 0xda, 0x05, 0x2b, 0xf9, 0x56,
	0x54, 0xc4, 0x70, 0x0d, 0xdf, 0x0e, 0x0f, 0x12, 0xaf, 0xc0, 0x56, 0x99, 0x19, 0xdf, 0x11, 0xd3,
	0xd5, 0xfc, 0x5e, 0xf8, 0x67, 0xa0, 0x07, 0x3d, 0x75, 0xe6, 0xaa, 0x8e, 0x9b, 0x40, 0x4b, 0x6e,
	0x3d, 0xf3, 0xf0, 0x16, 0x4c, 0xb1, 0x2b, 0x38, 0xb1, 0x5c, 0xcd, 0xef, 0x8f, 0x07, 0xf4, 0xe4,
	0x3e, 0x1a, 0xed, 0x0a, 0x1e, 0xca, 0xdf, 0x48, 0xc1, 0x4c, 0x98, 0xe0, 0xa4, 0xed, 0x6a, 0x7e,
	0x77, 0x3c, 0xa4, 0xaa, 0x2a, 0x3d, 0x54, 0xa5, 0xd1, 0xa1, 0x6a, 0x28, 0x73, 0xde, 0x3d, 0x98,
	0xcd, 0x34, 0x02, 0x58, 0xc1, 0xe2, 0x25, 0x88, 0xa6, 0xce, 0x05, 0xda, 0xd0, 0x5a, 0x3d, 0x2e,
	0xa3, 0xa5, 0xa3, 0x61, 0x17, 0xda, 0x0f, 0xcb, 0xf9, 0x7c, 0xba, 0x88, 0x1c, 0x1d, 0x3b, 0x60,
	0x3e, 0x05, 0xb3, 0xa9, 0x63, 0x78, 0x3f, 0x1a, 0x0c, 0x9e, 0xb3, 0x74, 0xcb, 0x93, 0xff, 0x30,
	0xa1, 0xbc, 0x85, 0x49, 0x48, 0x3d, 0xf9, 0x1e, 0x6b, 0x40, 0x54, 0x59, 0xba, 0x65, 0xa2, 0x2e,
	0x39, 0x31, 0x14, 0x88, 0xa3, 0x81, 0x43, 0xe8, 0xa8, 0xd2, 0x41, 0x22, 0x29, 0xd9, 0xe1, 0x51,
	0xe3, 0x35, 0x80, 0xfa, 0x5e, 0xb0, 0x0d, 0xdf, 0x23, 0x3a, 0x71, 0x1a, 0x88, 0x59, 0x55, 0xd5,
	0xbc, 0xdc, 0x43, 0xb4, 0xe4, 0xf2, 0x33, 0x6f, 0x62, 0xbe, 0xea, 0x45, 0x1c, 0x5b, 0x92, 0xc6,
	0xdd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xc8, 0x5d, 0x33, 0x1c, 0x02, 0x00, 0x00,
}
